#!/bin/sh
# Copyright 2008  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=nfs-utils
VERSION=1.1.4
BUILD=${BUILD:-1}

. /etc/pkghelpers
pkghelpers_env

rm -rf $PKG
mkdir -p $PKG

# Explode the package framework:
cd $PKG
explodepkg $CWD/_nfs-utils.tar.gz

# Add startup script:
cat $CWD/rc.nfsd > $PKG/etc/rc.d/rc.nfsd.new
# Off by default, unless there's a previous version that's turned on:
chmod 644 $PKG/etc/rc.d/rc.nfsd.new

cd $TMP
rm -rf nfs-utils-$VERSION
tar xjvf $CWD/nfs-utils-$VERSION.tar.bz2 || exit 1
cd nfs-utils-$VERSION

zcat $CWD/nfs-utils.lwrap.needs.lnsl.diff.gz | patch -p1 --verbose || exit 1

pkghelpers_permissions

# No NFSv4 yet -- it requires additional libraries.

CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --mandir=/usr/man \
  --with-statedir=/var/lib/nfs \
  --enable-nfsv3 \
  --enable-nfsv4=no \
  --enable-gss=no \
  --enable-secure-statd \
  --program-prefix= \
  --program-suffix= \
  --build=$ARCH-$DISTRO-linux

make -j $NUMJOBS || exit 1
make install DESTDIR=$PKG

# These might be in use:
( cd $PKG/var/lib/nfs
  for config_file in etab rmtab state xtab ; do
    mv ${config_file} ${config_file}.new
  done
)

# No NFSv4 yet, so remove these:
rm -f $PKG/sbin/*nfs4

# Why were we doing this?
mkdir -p $PKG/sbin
mv $PKG/usr/sbin/rpc.statd $PKG/sbin
( cd $PKG/usr/sbin ; ln -sf ../../sbin/rpc.statd . )

mkdir -p $PKG/usr/doc/nfs-utils-$VERSION
cp -a \
  AUTHORS COPYING INSTALL NEWS README \
  $PKG/usr/doc/nfs-utils-$VERSION
mkdir -p $PKG/usr/doc/nfs-utils-$VERSION/statd
cp -a \
  utils/statd/COPYING utils/statd/COPYRIGHT utils/statd/TODO \
  $PKG/usr/doc/nfs-utils-$VERSION/statd

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat << EOF > $PKG/install/doinst.sh
#!/bin/sh
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
EOF
( cd $PKG/var/lib/nfs
  for config_file in etab.new rmtab.new state.new xtab.new ; do
    if [ -r ${config_file} ]; then
      echo "config var/lib/nfs/${config_file}" >> $PKG/install/doinst.sh
    fi
  done
)
# If these aren't moved into place, they're junk:
echo "rm -f var/lib/nfs/*.new" >> $PKG/install/doinst.sh
cat << EOF >> $PKG/install/doinst.sh
if [ -x etc/rc.d/rc.nfsd ]; then
  chmod 755 etc/rc.d/rc.nfsd.new
else
  chmod 644 etc/rc.d/rc.nfsd.new
fi
config etc/rc.d/rc.nfsd.new
config etc/exports.new
EOF

# Build the package:
cd $PKG
pkghelpers_fixup
pkghelpers_makepkg
