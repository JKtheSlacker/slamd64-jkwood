#!/bin/sh
# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-coreutils

VERSION=6.9
ARCH=${ARCH:-x86_64}
BUILD=${BUILD:-1}
DISTRO=${DISTRO:-slamd64}

if [ $DISTRO = slackware ]; then
	PKGARCH=$ARCH
else
	PKGARCH=${ARCH}_${DISTRO}
fi

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
fi

# Clean build locations:
if [ ! -d $TMP ]; then
  mkdir -p $TMP
fi
rm -rf $PKG
mkdir -p $PKG

cd $TMP
rm -rf coreutils-$VERSION
tar xjvf $CWD/coreutils-$VERSION.tar.bz2
cd coreutils-$VERSION
chown -R root:root .
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 600 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;
find . -perm 400 -exec chmod 644 {} \;
find . -perm 440 -exec chmod 644 {} \;
find . -perm 777 -exec chmod 755 {} \;
find . -perm 775 -exec chmod 755 {} \;
find . -perm 511 -exec chmod 755 {} \;
find . -perm 711 -exec chmod 755 {} \;
find . -perm 555 -exec chmod 755 {} \;

# Patch in the uname for Linux enhancements
zcat $CWD/coreutils.uname.diff.gz | patch -p1 --verbose --backup --suffix=.orig || exit 1

# Compilation with glibc version later than 2.3.2 needs the environment
# variable DEFAULT_POSIX2_VERSION set to 199209.
# Without the next line, the coreutils will start complaining about 'obsolete'
# command switches, like "tail -20" will be considered obsolete.
# This behaviour breaks many other packages... the 'obsolete' parameters are
# too commonly used to disregard them.  Better to stick with the older more
# widely accepted standards until things begin to demand the new way.
CFLAGS="$SLKCFLAGS" \
DEFAULT_POSIX2_VERSION=199209 \
CFLAGS=-O2 ./configure \
  --prefix=/usr \
  --bindir=/bin \
  --sysconfdir=/etc \
  $ARCH-$DISTRO-linux
make -j10 || exit 1
make install DESTDIR=$PKG
mkdir -p $PKG/usr/sbin
mkdir -p $PKG/usr/doc/coreutils-$VERSION $PKG/usr/sbin
cp -a \
  ABOUT-NLS AUTHORS COPYING NEWS README THANKS THANKS-to-translators TODO \
  $PKG/usr/doc/coreutils-$VERSION

cd $PKG
mv $PKG/usr/share/info $PKG/usr/share/man $PKG/usr || exit

# These are important enough that they should probably all go into /bin at this
# point...   Having some of them unavailable when /usr isn't mounted is just a
# source of unending bug reports for various third party applications.
# Time to end those reports.  :-)
mkdir -p $PKG/bin $PKG/usr/bin
( cd $PKG/usr/bin
  for file in ../../bin/* ; do
    ln  --verbose -sf $file .
  done
)
rm -f usr/info/dir
gzip -9 usr/info/*
gzip -9 usr/man/man?/*.?
mkdir -p etc

# Add some defaults, although a very slack-like set of default options are built
# into /bin/ls now anyway:
zcat $CWD/DIR_COLORS.gz > etc/DIR_COLORS.new

# Since dircolors no longer provides any default aliases these scripts
# will be needed for ls to act as expected:
mkdir -p etc/profile.d
zcat $CWD/coreutils-dircolors.csh.gz > etc/profile.d/coreutils-dircolors.csh
zcat $CWD/coreutils-dircolors.sh.gz > etc/profile.d/coreutils-dircolors.sh
chmod 755 etc/profile.d/*

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Remove things that are provided by other Slackware packages:
for dupe in hostname kill su uptime ; do
  rm -f bin/${dupe} usr/bin/${dupe} usr/sbin/${dupe} usr/man/man?/${dupe}.*
done

# Add ginstall links (there's still a lot of stuff that needs this to compile):
( cd bin ; ln -sf install ginstall )
( cd usr/bin ; ln -sf ../../bin/ginstall ginstall )
( cd usr/man/man1 ; ln -sf install.1.gz ginstall.1.gz )

mkdir -p install
zcat $CWD/doinst.sh.gz > install/doinst.sh
cat $CWD/slack-desc > install/slack-desc

# Build the package:
cd $PKG
makepkg -l y -c n $TMP/coreutils-$VERSION-$PKGARCH-$BUILD.tgz

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/coreutils-$VERSION
  rm -rf $PKG
fi
